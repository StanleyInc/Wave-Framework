<!DOCTYPE html>
<html lang="en">
	<head>
		<title>Installation and Setup - Wave Framework</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width"/> 
		<link type="text/css" href="../style.css" rel="stylesheet" media="all"/>
		<link rel="icon" href="../../favicon.ico" type="image/x-icon"/>
		<link rel="icon" href="../../favicon.ico" type="image/vnd.microsoft.icon"/>
	</head>
	<body>
	
		<h1>Installation and Setup</h1>
		
			<h2>Installing Wave Framework</h2>

				<ul>
					<li><b>1</b> - Unpack the Wave Framework downloaded archive.</li>
					<li><b>2</b> - Configuration file in root directory /config.ini of the archive should be configured according to your needs. Read more about configuration from Wiki.</li>
					<li><b>3</b> - Upload the files to your server and make filesystem folder /filesystem/ and all of its subfolders writable by PHP, for example with command chmod 0755 or giving rights using FileZilla (Right click on folder -&gt; File Permissions -&gt; Numeric value -&gt; 0755) or with any other FTP software. This is not required on Windows server.</li>
					<li><b>4</b> - Wave Framework requires servers ability to redirect all requests to /index.php file, thus Apache RewriteEngine or Nginx HttpRewriteModule has to be used. Look at points 6a and 6b, depending on your server.</li>
					<li><b>5a</b> - This only applies to Apache server: In some hosting environments the line in /.htaccess and /tools/.htaccess 'Options +FollowSymLinks ' may throw an error, if it does then this line should be commented out and compatibility script tried again.</li>
					<li><b>5b</b> - This only applies to Nginx server: For rewrites to work properly you need to place settings found in /nginx.conf file to your Nginx server configuration.</li>
					<li><b>6</b> - Test if server is set up properly by making a request to /tools/compatibility.php script.</li>
					<li><b>7</b> -  Access the root file with a browser and if 'Hello Wave!' is shown without any errors, then everything should be up and running. There is no setup script that needs to be run and you can start developing your application right away.</li>
					<li><b>8</b> - <b>Important!</b> Make sure to change http-authentication-username and http-authentication-password lines in /config.ini file (line #29 and #30). These are used to authenticate access to developer tools in /tools/ directory and it may pose a security risk if left unchanged.</li>
				</ul>

			<h2>Server Requirements</h2>

				<p>Wave Framework requires a server that allows to route all requests to Index Gateway file (/index.php). Index Gateway does not work without URL rewriting. It is possible to use Wave Framework's API without Index Gateway, but in this case you need to develop your own gateway that does not require such HTTP request URL rewriting.</p>

				<h3>Apache</h3>

					<p>Apache and <b>mod_rewrite</b> (RewriteEngine) is required if you intend to use Index Gateway for website as well as default API Handler. Apache .htaccess file is included in the archive that should do everything server needs to make it work, if the mod_rewrite module is supported by Apache.</p>

				<h3>Nginx</h3>

					<p>Wave Framework also supports Nginx server. Nginx does not have .htaccess style local settings for web server, thus these settings have to be written in Nginx configuration itself. Recommended settings for Nginx are stored in /nginx.conf file. You have to manually place them in Nginx server configuration.</p>

				<h3>PHP</h3>

					<p>PHP version 5.3.3 or newer is required.</p>
					<p>Wave Framework also uses <b>Zlib</b> extension for compressed output, <b>PDO</b> extension for database connections, <b>GD Image Library</b> is used to dynamically resize images, <b>Mcrypt</b> is used for crypted input and output, <b>Fileinfo</b> extension for File Handler and <b>Zip</b> extension for automatic update scripts together with <b>FTP</b>, <b>APC</b> is used to improve the performance of PHP and caching, <b>SimpleXML</b> is used to support XML stream as API input, <b>cURL</b> is used for external requests, . These extensions come with PHP and should be enabled by default, but if they are not enabled then compatibility script will warn you about it and recommend what you should do.</p>

				<h3>Filesystem</h3>

					<p>It is also required that <b>/filesystem/</b> folder and all of its subfolders are writable by PHP. This is not required on Windows server, since folders are already writable.</p>

				<h2>Successful output from Compatibility Script</h2>

					<p>SUCCESS: PHP is running version 5.3 or newer<br/>
					SUCCESS: PHP setting short_open_tag is enabled<br/>
					SUCCESS: PDO is supported<br/>
					SUCCESS: PDO MySQL is supported<br/>
					SUCCESS: PDO SQLite is supported<br/>
					SUCCESS: PDO PostgreSQL is supported<br/>
					SUCCESS: PDO Oracle is supported<br/>
					SUCCESS: PDO MSSQL is supported<br/>
					SUCCESS: Zlib is supported<br/>
					SUCCESS: APC PHP is supported<br/>
					SUCCESS: SimpleXML is supported<br/>
					SUCCESS: cURL is supported<br/>
					SUCCESS: Fileinfo is supported<br/>
					SUCCESS: Mcrypt is supported<br/>
					SUCCESS: Zip is supported<br/>
					SUCCESS: FTP is supported<br/>
					SUCCESS: GD Graphics Library is supported<br/>
					SUCCESS: Apache server is used<br/>
					SUCCESS: Apache mod_rewrite extension is supported<br/>
					SUCCESS: .htaccess file is present<br/>
					SUCCESS: /filesystem/ is writable</br>
					SUCCESS: /filesystem/cache/ is writable</br>
					SUCCESS: /filesystem/cache/images/ is writable</br>
					SUCCESS: /filesystem/cache/output/ is writable</br>
					SUCCESS: /filesystem/cache/resources/ is writable</br>
					SUCCESS: /filesystem/cache/custom/ is writable</br>
					SUCCESS: /filesystem/cache/tags/ is writable</br>
					SUCCESS: /filesystem/messenger/ is writable</br>
					SUCCESS: /filesystem/keys/ is writable</br>
					SUCCESS: /filesystem/limiter/ is writable</br>
					SUCCESS: /filesystem/logs/ is writable</br>
					SUCCESS: /filesystem/errors/ is writable</br>
					SUCCESS: /filesystem/tokens/ is writable</br>
					SUCCESS: /filesystem/tmp/ is writable</br>
					SUCCESS: /filesystem/userdata/ is writable</br>
					SUCCESS: /filesystem/backups/ is writable</br>
					SUCCESS: /filesystem/static/ is writable</br>
					SUCCESS: /filesystem/updates/ is writable</br>
					SUCCESS: /filesystem/data/ is writable</p>
			
	</body>
</html>