<?php/* WWW - PHP micro-frameworkIndex gateway data handlerIndex gateway data handler is in functionality similar to api handler, except it uses API calls that cannot be controlled with direct request. It calls WWW_controller_url to solve a URL request and it calls WWW_controller_view to display data to the client relevant to the request. Data is loaded for every request that does not have a matched and found file as a response.Author and support: Kristo Vaher - kristo@waher.net*/// This functions file is not required, but can be used for system wide functions// If you want to include additional libraries, do so hererequire(__ROOT__.DIRECTORY_SEPARATOR.'resources'.DIRECTORY_SEPARATOR.'functions.php');// If index URL cache is not configured, it is defaulted to 30 seconds.if(!isset($config['index-url-cache-timeout'])){	$config['index-url-cache-timeout']=30;}// If index view cache is not configured, it is defaulted to 30 seconds.if(!isset($config['index-view-cache-timeout'])){	$config['index-view-cache-timeout']=30;}// State class is used by API and Factory created objects to keep track of request staterequire(__ROOT__.DIRECTORY_SEPARATOR.'engine'.DIRECTORY_SEPARATOR.'class.www-state.php');$state=new WWW_State($config);// If database name is set then database controller is loadedif(isset($config['database-name']) && $config['database-name']!=''){	// Other database settings are required	if(isset($config['database-type']) && isset($config['database-host']) && isset($config['database-username']) && isset($config['database-password'])){		// Including the required class and creating the object		require(__ROOT__.DIRECTORY_SEPARATOR.'engine'.DIRECTORY_SEPARATOR.'class.www-database.php');		$databaseConnection=new WWW_Database();			// Assigning database variables and creating the connection		$databaseConnection->type=$config['database-type'];		$databaseConnection->host=$config['database-host'];		$databaseConnection->username=$config['database-username'];		$databaseConnection->password=$config['database-password'];		$databaseConnection->database=$config['database-name'];		$databaseConnection->connect();				// Passing the database to State object		$state->databaseConnection=$databaseConnection;				// If Logger is defined, then database connection is passed to Logger as well		if(isset($logger)){			$logger->databaseConnection=$databaseConnection;		}		}	}// Since $_GET is not naturally parsed due to Apache redirect, it is re-created for use here$request=parse_url($_SERVER['REQUEST_URI'],PHP_URL_QUERY);parse_str($request,$_GET);// Note about API use in Index gateway// * API requires the first variable, which is considered the 'command'.// * API command is a string consisting of alphabetical letters and dashes// * 'url-solve' command (that is used below) is solved to execute function solve() in class WWW_controllers_url (in /controllers/class.url.php)// * Second variable sent to command() includes all the data from the client// API deals with cache and validations and returns result in requested format// By default it returns a PHP variable, but can return JSON, XML or simply echo whatever the function calls within// API is used to process all requests and it handles caching and API validationsrequire(__ROOT__.DIRECTORY_SEPARATOR.'engine'.DIRECTORY_SEPARATOR.'class.www-api.php');$api=new WWW_API($state);// This uses current request URI to find out which view should be loaded, by default it uses the request set by State// API check is turned off, since index.php is considered a public gateway$viewData=$api->command('url-solve',array('www-request'=>$state->data['request'],'www-cache-timeout'=>$config['index-url-cache-timeout']),false);		// All the data sent by the client is stored in this variable$inputData=array();// All the data sent by client is added here and merged into one arrayif(isset($_POST) && !empty($_POST)){ $inputData+=$_POST; }if(isset($_GET) && !empty($_GET)){ $inputData+=$_GET; }if(isset($_FILES) && !empty($_FILES)){ $inputData+=$_FILES; }if(isset($_COOKIE) && !empty($_COOKIE)){ $inputData+=$_COOKIE; }if(isset($_SESSION) && !empty($_SESSION)){ $inputData+=$_SESSION; }// Solved request is used to load the view through API$inputData['www-view-data']=$viewData;// API check is turned off, since index.php is considered a public gateway$api->command('view-load',$inputData+array('www-output'=>1,'www-return-data-type'=>'html','www-cache-timeout'=>$config['index-view-cache-timeout']),false);// Logger is notified whether cache was used by API or notif(isset($logger)){	$logger->cacheUsed=$api->cacheUsed;}?>